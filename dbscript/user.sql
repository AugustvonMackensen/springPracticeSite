DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE USERS CASCADE CONSTRAINTS;


CREATE TABLE MEMBER(
    USERID VARCHAR2(20) CONSTRAINT PK_MEMBER_UID PRIMARY KEY,
    USERPWD VARCHAR2(100) NOT NULL,
    USERNAME VARCHAR2(20) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL,
    LOGINOK CHAR(1) DEFAULT 'Y',
    ADMIN CHAR(1) DEFAULT 'N',
    ENROLL_DATE DATE DEFAULT SYSDATE
);

CREATE TABLE USERS (
  USERID VARCHAR2(20) PRIMARY KEY,
  USERPWD VARCHAR2(100) NOT NULL,
  USERNAME VARCHAR2(20) NOT NULL
);

ALTER TABLE USERS
DROP PRIMARY KEY;

-- 삭제룰을 추가한 새 제약조건 추가함
ALTER TABLE USERS
ADD CONSTRAINT FK_MEMBER_UID 
FOREIGN KEY(USERID) REFERENCES MEMBER ON DELETE CASCADE;

COMMENT ON COLUMN MEMBER.USERID IS '아이디';
COMMENT ON COLUMN MEMBER.USERPWD IS '패스워드';
COMMENT ON COLUMN MEMBER.USERNAME IS '이름';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.LOGINOK IS '로그인 활성/비활성 여부';
COMMENT ON COLUMN MEMBER.ADMIN IS '관리자 모드인지 확인여부';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '회원가입한 날짜';
-- TRIGGER 작성 : 이름 - TRI_INSERT_USERS
-- MEMBER 테이블에 새 회원정보가 기록되면, 자동으로 USERS 테이블에 아이디, 암호, 이름이
-- INSERT 되게 함
CREATE OR REPLACE TRIGGER TRI_INSERT_USERS
AFTER INSERT ON MEMBER
FOR EACH ROW
BEGIN
  INSERT INTO USERS
  VALUES (:NEW.USERID, :NEW.USERPWD, :NEW.USERNAME);
END;
/

CREATE OR REPLACE TRIGGER TRI_UPDATE_USERS
AFTER UPDATE ON MEMBER
FOR EACH ROW
BEGIN
  UPDATE USERS 
  SET USERPWD = :NEW.USERPWD
  WHERE USERID = :OLD.USERID;
END;

-- 관리자인 'admin' 인 아이디의 컬럼값 변경
UPDATE MEMBER
SET ADMIN = 'Y'
WHERE USERID = 'admin';

commit;

select * from member;

-- notice 의 공지글 등록은 관리자만 등록/수정할 수 있게 처리함
-- 공지글 등록자 아이디를 수정 : user01 >> admin 으로 변경
UPDATE NOTICE
SET NOTICEWRITER = 'admin';

commit;

select * from notice;

